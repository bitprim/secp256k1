#
# Copyright (c) 2017-2018 Bitprim Inc.
#
# This file is part of Bitprim.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

branches:
  only:
  # - master
  # - /^v\d+\.\d+\.\d+$/
  - dev
  - /^release-\d+\.\d+\.\d+$/
  - /^hotfix-\d+\.\d+\.\d+$/
  - /^feature-ci-.+$/
  - /^feature_ci_.+$/
  - /^feature-travis-.+$/
  - /^feature_travis_.+$/

linux: &linux
   os: linux
   sudo: required
   language: python
   python: "3.6"
   services:
     - docker

osx: &osx
   os: osx
   language: generic

before_install:
  - |
    if [[ "${TRAVIS_COMMIT_MESSAGE}" = *"[skip travis]"* ]]; then
      echo "[skip travis] detected in commit message, exiting"
      travis_terminate 0
    fi

install:
  - cd ${TRAVIS_BUILD_DIR}

  - |
    if [[ "${PUSH_TO_REPOS}" != "true" ]]; then
      chmod +x ci_utils/.travis/install.sh
      ./ci_utils/.travis/install.sh
    fi    

script:
  # - python ci_utils/print_version.py
  - export BITPRIM_BRANCH="${TRAVIS_BRANCH}"
  - git fetch --unshallow
  # - export BITPRIM_BUILD_NUMBER="$(git describe)"
  # - export BITPRIM_BUILD_NUMBER="$(python ci_utils/print_version.py)"
  # - export BITPRIM_CONAN_VERSION="${BITPRIM_BUILD_NUMBER}"
  # - echo "${BITPRIM_BUILD_NUMBER}"
  # - echo "${BITPRIM_CONAN_VERSION}"


  - |
    echo "${TRAVIS_BRANCH}"
    if [[ "${TRAVIS_BRANCH}" = "dev" ]]; then
      export BITPRIM_CONAN_CHANNEL="testing"
      export BITPRIM_FULL_BUILD=0
    elif  [[ "${TRAVIS_BRANCH}" = "release"* ]]; then
      export BITPRIM_CONAN_CHANNEL="stable"
      export BITPRIM_FULL_BUILD=1
    elif  [[ "${TRAVIS_BRANCH}" = "hotfix"* ]]; then
      export BITPRIM_CONAN_CHANNEL="stable"
      export BITPRIM_FULL_BUILD=1
    elif  [[ "${TRAVIS_BRANCH}" = "feature"* ]]; then
      export BITPRIM_CONAN_CHANNEL="${TRAVIS_BRANCH}"
      export BITPRIM_FULL_BUILD=0
    else
      export BITPRIM_CONAN_CHANNEL="stable"
      export BITPRIM_FULL_BUILD=1
    fi
    # echo "${BITPRIM_CONAN_CHANNEL}"
    # echo "${BITPRIM_FULL_BUILD}"

    # if [ ! -f conan_version ]; then
    #   echo "Creating conan_version file"
    #   printf "${BITPRIM_BUILD_NUMBER}" > conan_version
    # fi


  - |
    if [[ "${PUSH_TO_REPOS}" == "true" ]]; then
      chmod +x .travis/push_other_repo.sh
      ./.travis/push_other_repo.sh
    else
      cd ${TRAVIS_BUILD_DIR}
      chmod +x ci_utils/.travis/run.sh
      ./ci_utils/.travis/run.sh
    fi  

jobs:
  include:

# Static Checks ------------------------------------------------------
    - stage: static checks
      install: skip
      # script:
      #     - chmod +x .travis/push_other_repo.sh
      #     - ./.travis/push_other_repo.sh

      script: echo "Running checks (1)"
      # script:
      #   - export BITPRIM_BRANCH="${TRAVIS_BRANCH}"
      #   - git fetch --unshallow
      #   # - export BITPRIM_BUILD_NUMBER="$(git describe)"
      #   - export BITPRIM_BUILD_NUMBER="$(python ci_utils/print_version.py)"
      #   - echo "${BITPRIM_BUILD_NUMBER}"

# Unit Tests ------------------------------------------------------
    - stage: unit tests
      os: linux
      sudo: required
      language: python
      python: "3.6"
      services:
        - docker
      env: CONAN_GCC_VERSIONS=7 CONAN_DOCKER_IMAGE=lasote/conangcc7 CONAN_UPLOAD="" 
           BITPRIM_RUN_TESTS=true

# Builds ------------------------------------------------------
    # Linux, GCC, libstdc++ ------------------------------------------------------
    - stage: build and upload binaries
      os: linux
      sudo: required
      language: python
      python: "3.6"
      services:
        - docker
      env: CONAN_GCC_VERSIONS=8 CONAN_DOCKER_IMAGE=lasote/conangcc8
      if: branch =~ /^(release|hotfix).+$/

    - stage: build and upload binaries
      os: linux
      sudo: required
      language: python
      python: "3.6"
      services:
        - docker
      env: CONAN_GCC_VERSIONS=7 CONAN_DOCKER_IMAGE=lasote/conangcc7

    - stage: build and upload binaries
      os: linux
      sudo: required
      language: python
      python: "3.6"
      services:
        - docker
      env: CONAN_GCC_VERSIONS=6 CONAN_DOCKER_IMAGE=lasote/conangcc6
      if: branch =~ /^(release|hotfix).+$/

    - stage: build and upload binaries
      os: linux
      sudo: required
      language: python
      python: "3.6"
      services:
        - docker
      env: CONAN_GCC_VERSIONS=5 CONAN_DOCKER_IMAGE=lasote/conangcc5
      if: branch =~ /^(release|hotfix).+$/


    # - stage: build and upload binaries
    #   os: linux
    #   sudo: required
    #   language: python
    #   python: "3.6"
    #   services:
    #     - docker
    #   env: CONAN_GCC_VERSIONS=4.9 CONAN_DOCKER_IMAGE=lasote/conangcc49
    #   if: branch =~ /^(release|hotfix).+$/


    # Linux, Clang, libstdc++ ----------------------------------------------------
    - stage: build and upload binaries
      os: linux
      sudo: required
      language: python
      python: "3.6"
      services:
        - docker
      env: CONAN_CLANG_VERSIONS=6.0 CONAN_DOCKER_IMAGE=lasote/conanclang60

    - stage: build and upload binaries
      os: linux
      sudo: required
      language: python
      python: "3.6"
      services:
        - docker
      env: CONAN_CLANG_VERSIONS=5.0 CONAN_DOCKER_IMAGE=lasote/conanclang50
      if: branch =~ /^(release|hotfix).+$/

    - stage: build and upload binaries
      os: linux
      sudo: required
      language: python
      python: "3.6"
      services:
        - docker
      env: CONAN_CLANG_VERSIONS=4.0 CONAN_DOCKER_IMAGE=lasote/conanclang40
      if: branch =~ /^(release|hotfix).+$/

    # - stage: build and upload binaries
    #   os: linux
    #   sudo: required
    #   language: python
    #   python: "3.6"
    #   services:
    #     - docker
    #   env: CONAN_CLANG_VERSIONS=3.9 CONAN_DOCKER_IMAGE=lasote/conanclang39

    # macOS, apple-Clang, libc++ -------------------------------------------------
    - stage: build and upload binaries
      os: osx
      language: generic
      osx_image: xcode9
      env: CONAN_APPLE_CLANG_VERSIONS=9.0 BITPRIM_RUN_TESTS=true

    - stage: build and upload binaries
      os: osx
      language: generic
      osx_image: xcode8.3         
      env: CONAN_APPLE_CLANG_VERSIONS=8.1
      if: branch =~ /^(release|hotfix).+$/

    - stage: build and upload binaries
      os: osx
      language: generic
      osx_image: xcode7.3
      env: CONAN_APPLE_CLANG_VERSIONS=7.3
      if: branch =~ /^(release|hotfix).+$/


# Push to repos ------------------------------------------------------
    - stage: push to repos
      install: skip
      # script: echo "Running push to repos"
      script:
          - chmod +x .travis/push_other_repo.sh
          - ./.travis/push_other_repo.sh


# # Integration Tests ------------------------------------------------------
#     - stage: integration tests
#       install: skip
#       script: echo "Running integration tests (Guille)"


    # - stage: deploy to staging
    #   install: skip
    #   script: skip
    # - stage: test staging
    #   install: skip
    #   script: 'curl http://sf-stages-staging.herokuapp.com'
    # - stage: deploy to production
    #   install: skip
    #   script: skip
    # - stage: test production
    #   install: skip
    #   script: 'curl http://sf-stages-production.herokuapp.com'


notifications:
  email: false
  webhooks:
    urls: https://webhooks.gitter.im/e/a19dd2b03bf676d2b622
    on_success: change
    on_failure: always
